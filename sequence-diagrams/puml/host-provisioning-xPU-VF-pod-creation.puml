@startuml
!pragma teoz true
skinparam noteBorderColor Black
skinparam noteBorderThickness 1
skinparam noteBackgroundColor Yellow

skinparam sequence {
	BoxBorderColor Black
	BoxFontSize 20

	ArrowColor Black
	ArrowThickness 1

	ActorBorderColor Black
	ActorBorderThickness 3
	ActorBackgroundColor Business
	ActorFontSize 15

	ParticipantBorderColor Black
	ParticipantBorderThickness 1
	ParticipantBackgroundColor Business
	ParticipantFontSize 15

	LifeLineBorderColor Black
	LifeLineBorderThickness 1
	LifeLineBackgroundColor LightGray
}

actor "User"
box "Host Server"
	participant "Linux"
	participant "Kubelet"
  box "xPU Host Agent" #LightBlue
         participant "OPI Host Controller"
         participant "gRPC server"
  end box
	participant "xPU Device Plugin" #dodgerblue
	participant "CNI" #LightBlue
	participant "Pod"
        participant "kube-apiserver"
end box

box "xPU"
  box "xPU Agent" #LightBlue
	participant "OPI xPU Controller"
  end box
  participant "OPI API"
end box

== Pod Creation ==
autonumber

"User" -> "Kubelet": create pod
"Kubelet" -> "xPU Device Plugin": GRPC: Allocate(VF/SF)
activate "xPU Device Plugin"
"xPU Device Plugin" -> "gRPC server": GRPC: Allocate (VF/SF)
"gRPC server" -> "OPI Host Controller" : Create xPU Netdev CRD
"OPI Host Controller" -[#green]> "kube-apiserver" : Push xPU Netdev CRD
"kube-apiserver" -[#green]> "OPI xPU Controller": Notify xPU Netdev CR
"OPI xPU Controller" -> "OPI xPU Controller": Sync xPU Netdev CR
"OPI xPU Controller"->"OPI API": Create the netdev
"OPI API"-->"OPI xPU Controller": return success
"OPI xPU Controller"->"OPI API": Get the IP for the netdev
"OPI API"-->"OPI xPU Controller": return IP
"OPI xPU Controller"-[#green]>"kube-apiserver": Update status + IP address of xPU Netdev CR
"kube-apiserver" -[#green]> "OPI Host Controller": Notify xPU Netdev CR
"OPI Host Controller" -> "OPI Host Controller": Sync xPU Netdev CR
"OPI Host Controller" -->"gRPC server": return success
"gRPC server" -->"xPU Device Plugin": return success
"xPU Device Plugin" --> "Kubelet": GRPC: AllocateResponse()
deactivate "xPU Device Plugin"

autonumber stop
"Kubelet" -[#Red]>> "Pod" : <color:Red>Kubelet starts creating the pod around now
autonumber resume

"Kubelet" -> "CNI" : cmdAdd(VF/SF, namespace, config)
activate "CNI"
"CNI" -> "gRPC server" : Get IP address from VF/SF CRD
"gRPC server" -> "OPI Host Controller" : Get IP address from VF/SF CRD
"OPI Host Controller" -->"gRPC server": return IP Address
"gRPC server" --> "CNI" : return IP Address
"CNI" -> "Pod" : place VF/SF in pod netns
"CNI" -> "Kubelet" : return 0

deactivate "CNI"

autonumber stop

== Pod Running ==

"Kubelet" -> "Pod" : start pod
"Pod" -> "Pod" : application start
activate "Pod"

@enduml
